//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class BillpocketOperationStatusResponse: APIModel {

    public enum Status: String, Codable {
        case active = "ACTIVE"
        case inactive = "INACTIVE"

        public static let cases: [Status] = [
          .active,
          .inactive,
        ]
    }

    public var billpocketToken: String?

    public var status: Status?

    public var statusDetail: String?

    public init(billpocketToken: String? = nil, status: Status? = nil, statusDetail: String? = nil) {
        self.billpocketToken = billpocketToken
        self.status = status
        self.statusDetail = statusDetail
    }

    private enum CodingKeys: String, CodingKey {
        case billpocketToken
        case status
        case statusDetail
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        billpocketToken = try container.decodeIfPresent(.billpocketToken)
        status = try container.decodeIfPresent(.status)
        statusDetail = try container.decodeIfPresent(.statusDetail)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(billpocketToken, forKey: .billpocketToken)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(statusDetail, forKey: .statusDetail)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BillpocketOperationStatusResponse else { return false }
      guard self.billpocketToken == object.billpocketToken else { return false }
      guard self.status == object.status else { return false }
      guard self.statusDetail == object.statusDetail else { return false }
      return true
    }

    public static func == (lhs: BillpocketOperationStatusResponse, rhs: BillpocketOperationStatusResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
