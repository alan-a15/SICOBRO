//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class InitiatePasswordChangeRequest: APIModel {

    public var redId: String?

    public var storeUserName: String?

    public init(redId: String? = nil, storeUserName: String? = nil) {
        self.redId = redId
        self.storeUserName = storeUserName
    }

    private enum CodingKeys: String, CodingKey {
        case redId
        case storeUserName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        redId = try container.decodeIfPresent(.redId)
        storeUserName = try container.decodeIfPresent(.storeUserName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(redId, forKey: .redId)
        try container.encodeIfPresent(storeUserName, forKey: .storeUserName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? InitiatePasswordChangeRequest else { return false }
      guard self.redId == object.redId else { return false }
      guard self.storeUserName == object.storeUserName else { return false }
      return true
    }

    public static func == (lhs: InitiatePasswordChangeRequest, rhs: InitiatePasswordChangeRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
