//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TaeProductDto: APIModel {

    public var amountList: [Int]?

    public var name: String?

    public var txnId: String?

    public init(amountList: [Int]? = nil, name: String? = nil, txnId: String? = nil) {
        self.amountList = amountList
        self.name = name
        self.txnId = txnId
    }

    private enum CodingKeys: String, CodingKey {
        case amountList
        case name
        case txnId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        amountList = try container.decodeArrayIfPresent(.amountList)
        name = try container.decodeIfPresent(.name)
        txnId = try container.decodeIfPresent(.txnId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(amountList, forKey: .amountList)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(txnId, forKey: .txnId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TaeProductDto else { return false }
      guard self.amountList == object.amountList else { return false }
      guard self.name == object.name else { return false }
      guard self.txnId == object.txnId else { return false }
      return true
    }

    public static func == (lhs: TaeProductDto, rhs: TaeProductDto) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
