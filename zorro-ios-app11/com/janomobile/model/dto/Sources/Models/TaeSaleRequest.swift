//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TaeSaleRequest: APIModel {

    public var amountCents: Int?

    public var clientVersion: String?

    public var phone: String?

    public var productTxnId: String?

    public var uuid: String?

    public init(amountCents: Int? = nil, clientVersion: String? = nil, phone: String? = nil, productTxnId: String? = nil, uuid: String? = nil) {
        self.amountCents = amountCents
        self.clientVersion = clientVersion
        self.phone = phone
        self.productTxnId = productTxnId
        self.uuid = uuid
    }

    private enum CodingKeys: String, CodingKey {
        case amountCents
        case clientVersion
        case phone
        case productTxnId
        case uuid
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        amountCents = try container.decodeIfPresent(.amountCents)
        clientVersion = try container.decodeIfPresent(.clientVersion)
        phone = try container.decodeIfPresent(.phone)
        productTxnId = try container.decodeIfPresent(.productTxnId)
        uuid = try container.decodeIfPresent(.uuid)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(amountCents, forKey: .amountCents)
        try container.encodeIfPresent(clientVersion, forKey: .clientVersion)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(productTxnId, forKey: .productTxnId)
        try container.encodeIfPresent(uuid, forKey: .uuid)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TaeSaleRequest else { return false }
      guard self.amountCents == object.amountCents else { return false }
      guard self.clientVersion == object.clientVersion else { return false }
      guard self.phone == object.phone else { return false }
      guard self.productTxnId == object.productTxnId else { return false }
      guard self.uuid == object.uuid else { return false }
      return true
    }

    public static func == (lhs: TaeSaleRequest, rhs: TaeSaleRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
