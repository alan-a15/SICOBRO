//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CustomerReceiptRequest: APIModel {

    public var clientUUID: String?

    public var clientVersion: String?

    public var email: String?

    public var janoUUID: String?

    public init(clientUUID: String? = nil, clientVersion: String? = nil, email: String? = nil, janoUUID: String? = nil) {
        self.clientUUID = clientUUID
        self.clientVersion = clientVersion
        self.email = email
        self.janoUUID = janoUUID
    }

    private enum CodingKeys: String, CodingKey {
        case clientUUID
        case clientVersion
        case email
        case janoUUID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        clientUUID = try container.decodeIfPresent(.clientUUID)
        clientVersion = try container.decodeIfPresent(.clientVersion)
        email = try container.decodeIfPresent(.email)
        janoUUID = try container.decodeIfPresent(.janoUUID)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(clientUUID, forKey: .clientUUID)
        try container.encodeIfPresent(clientVersion, forKey: .clientVersion)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(janoUUID, forKey: .janoUUID)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CustomerReceiptRequest else { return false }
      guard self.clientUUID == object.clientUUID else { return false }
      guard self.clientVersion == object.clientVersion else { return false }
      guard self.email == object.email else { return false }
      guard self.janoUUID == object.janoUUID else { return false }
      return true
    }

    public static func == (lhs: CustomerReceiptRequest, rhs: CustomerReceiptRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
