//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ReportResponse: APIModel {

    public var fileId: String?

    public var generatedOnline: Bool?

    public init(fileId: String? = nil, generatedOnline: Bool? = nil) {
        self.fileId = fileId
        self.generatedOnline = generatedOnline
    }

    private enum CodingKeys: String, CodingKey {
        case fileId
        case generatedOnline
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        fileId = try container.decodeIfPresent(.fileId)
        generatedOnline = try container.decodeIfPresent(.generatedOnline)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(fileId, forKey: .fileId)
        try container.encodeIfPresent(generatedOnline, forKey: .generatedOnline)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReportResponse else { return false }
      guard self.fileId == object.fileId else { return false }
      guard self.generatedOnline == object.generatedOnline else { return false }
      return true
    }

    public static func == (lhs: ReportResponse, rhs: ReportResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
